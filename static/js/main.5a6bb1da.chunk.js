(this.webpackJsonplesson=this.webpackJsonplesson||[]).push([[0],{18:function(e,t){},19:function(e,t){},20:function(e,t){},21:function(e,t){},22:function(e,t){},28:function(e,t,n){},35:function(e,t,n){"use strict";n.r(t);var s=n(1),c=n.n(s),a=n(15),i=n.n(a),o=(n(28),n(7)),l=n(2),r=n(0);function d(e){var t=e.to,n=e.label,s=e.children;return Object(r.jsxs)("li",{children:[Object(r.jsx)(o.b,{to:t,children:n}),s&&Object(r.jsx)("ol",{children:s})]})}function p(){return Object(r.jsxs)("div",{className:"menu",children:[Object(r.jsx)(o.b,{to:"/",children:Object(r.jsx)("h5",{children:"Vite, React-Native\xa0!"})}),Object(r.jsxs)("ol",{children:[Object(r.jsxs)(d,{to:"/specific-components",label:"Composants Sp\xe9cifiques",children:[Object(r.jsx)(d,{to:"/specific-components/view",label:"<View /> et StyleSheet"}),Object(r.jsx)(d,{to:"/specific-components/text",label:"<Text />"}),Object(r.jsx)(d,{to:"/specific-components/image",label:"<Image />"}),Object(r.jsx)(d,{to:"/specific-components/text-input",label:"<TextInput />"}),Object(r.jsx)(d,{to:"/specific-components/button",label:"<Button />"}),Object(r.jsx)(d,{to:"/specific-components/touchables",label:"Touchables"}),Object(r.jsx)(d,{to:"/specific-components/lists",label:"Listes"})]}),Object(r.jsxs)(d,{to:"/react-hooks",label:"React\u2026 avec les hooks !",children:[Object(r.jsx)(d,{to:"/react-hooks/usestate",label:"useState()"}),Object(r.jsx)(d,{to:"/react-hooks/useeffect",label:"useEffect()"}),Object(r.jsx)(d,{to:"/react-hooks/usecallback",label:"useCallback()"}),Object(r.jsx)(d,{to:"/react-hooks/useref",label:"useRef()"}),Object(r.jsx)(d,{to:"/react-hooks/usememo",label:"useMemo()"}),Object(r.jsx)(d,{to:"/react-hooks/usereducer",label:"useReducer()"})]}),Object(r.jsxs)(d,{to:"/application-development",label:"D\xe9veloppement d\u2019applications",children:[Object(r.jsx)(d,{to:"/application-development/project-structure",label:"Structures de projets"}),Object(r.jsx)(d,{to:"/application-development/navigation",label:"Navigation"}),Object(r.jsx)(d,{to:"/application-development/state-management",label:"\xc9tat global et persistance"}),Object(r.jsx)(d,{to:"/application-development/animations",label:"Animations"}),Object(r.jsx)(d,{to:"/application-development/sensors",label:"Capteurs"})]})]})]})}function u(e){return Object(r.jsx)("h1",{children:"Vite, React-Native\xa0!"})}function j(e){var t=e.backTo,n=e.backLabel,s=e.nextTo,c=e.nextLabel;return Object(r.jsxs)("div",{className:"w-full flex justify-between pt-8",children:[Object(r.jsx)(o.b,{to:t,className:"button back",children:n}),Object(r.jsx)(o.b,{to:s,className:"button next",children:c})]})}function x(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"Composants Sp\xe9cifiques"}),Object(r.jsx)("h2",{children:"Les briques de base"}),Object(r.jsxs)("p",{children:["Dans le monde de React Native, il n\u2019y a pas de DOM \xe0 proprement parler. Pas de ",Object(r.jsx)("span",{className:"code",children:"div"}),","," ",Object(r.jsx)("span",{className:"code",children:"span"}),", ni de"," ",Object(r.jsx)("span",{className:"code",children:"ul"})," ou de ",Object(r.jsx)("span",{className:"code",children:"li"}),". Cedendant, React Native inclus quelques composants de base pr\xeats \xe0 l\u2019emploi. Comme avec React, ces composants peuvent combin\xe9s pour construire des composants plus complexes."]}),Object(r.jsxs)("p",{children:["Presque tous les composants de base \xe9tandent le composant"," ",Object(r.jsx)("span",{className:"code",children:"View"}),", et acceptent une prop optionnelle"," ",Object(r.jsx)("span",{className:"code",children:"style"}),". Comme le CSS dans un navigateur, le style comprends aussi bien des propri\xe9t\xe9s d\u2019apparence, comme les bordure et les couleurs, que des propri\xe9t\xe9s de mise en page. Il s\u2019agit d\u2019un sous-ensemble du CSS qui utilie l\u2019algorithme \xab flexbox \xbb."]}),Object(r.jsx)("p",{children:"Voyons \xe0 quoi \xe7a ressemble dans des exemples concrets."}),Object(r.jsx)(j,{backTo:"/",backLabel:"Vite, React Native",nextTo:"/specific-components/view",nextLabel:"<View /> et StyleSheet"})]})}var b=n(23),m=n(17),h=n.n(m);function O(e){return Object(r.jsx)(h.a,Object(b.a)({style:{with:800,height:600,marginTop:16,marginBottom:16},preset:"react-native",panes:["editor",{type:"player",scale:.8,width:300}]},e))}function f(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsxs)("h1",{children:["<View />"," et StyleSheet"]}),Object(r.jsxs)("h2",{children:["Le composant ","<View />"]}),Object(r.jsxs)("p",{children:["Les ",Object(r.jsx)("span",{className:"code",children:"View"})," sont les briques les plus basiques de React Native. Il s\u2019agit d\u2019une fa\xe7ade pour l\u2019\xe9quivalent natif de la plateforme cible\xa0:"]}),Object(r.jsxs)("ul",{children:[Object(r.jsx)("li",{children:"Pour iOS - UIView"}),Object(r.jsx)("li",{children:"Pour Android - android.view"}),Object(r.jsxs)("li",{children:["Pour Web - ","<div />"]})]}),Object(r.jsxs)("p",{children:["Les ",Object(r.jsx)("span",{className:"code",children:"View"})," sont principalement utilis\xe9es pour styliser et positionner leurs \xe9l\xe9ments enfants.",Object(r.jsx)("br",{}),"L\u2019exemple ci-dessous a deux ",Object(r.jsx)("span",{className:"code",children:"View"}),"\xa0: l\u2019\xe9l\xe9ment ext\xe9rieur sp\xe9cifie l\u2019alignement de celui contenu \xe0 l\u2019int\xe9rieur\xa0; l\u2019\xe9l\xe9ment int\xe9rieur dessine un carr\xe9 bleu."]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { View, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.box} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  box: {\n    width: 150,\n    height: 150,\n    backgroundColor: '#3B6CD4',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 4,\n  },\n})\n      "}),Object(r.jsx)("h2",{className:"mt-8",children:"Styles et mise en page"}),Object(r.jsxs)("blockquote",{children:["Les styles sont g\xe9n\xe9ralement d\xe9finis dans le m\xeame fichier que le composant qui les utilise, via"," ",Object(r.jsx)("span",{className:"code",children:"StyleSheet.create()"}),"."]}),Object(r.jsxs)("p",{children:["Les composants sp\xe9cifient la disposition de leurs enfants en utilisant l\u2019algorithme flexbox. Il permet de d\xe9clarer des vues qui s\u2019\xe9tandent ou qui s\u2019\xe9tr\xe9cissent pour remplir des \xe9crans de diff\xe9rentes dimensions. On peut m\xe9langer \xe0 sa guise ces \xe9l\xe9ments qui s\u2019ajustent automatiquement avec des \xe9l\xe9ments \xe0 taille fixe comme"," ",Object(r.jsx)("span",{className:"code",children:"width: 100"}),"."]}),Object(r.jsx)("p",{children:"Pour choisir le \xab layout \xbb pour les composants enfants, nous avons \xe0 faire 3 choix\xa0:"}),Object(r.jsxs)("table",{children:[Object(r.jsx)("thead",{children:Object(r.jsxs)("tr",{children:[Object(r.jsx)("th",{children:"Propri\xe9t\xe9"})," ",Object(r.jsx)("th",{children:"D\xe9faut"})," ",Object(r.jsx)("th",{children:"Options"})," ",Object(r.jsx)("th",{children:"Description"})]})}),Object(r.jsxs)("tbody",{children:[Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"flexDirection"})})," ",Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"column"})})," ",Object(r.jsxs)("td",{children:[Object(r.jsx)("span",{className:"code",children:"row"}),","," ",Object(r.jsx)("span",{className:"code",children:"column"})]})," ",Object(r.jsx)("td",{children:"On veut une disposition vertical (column) or horizontale ( row)\xa0? Ce choix d\xe9termine l\u2019axe principal du layout."})]}),Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"justifyContent"})})," ",Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"flex-start"})})," ",Object(r.jsxs)("td",{children:[Object(r.jsx)("span",{className:"code",children:"flex-start"}),","," ",Object(r.jsx)("span",{className:"code",children:"center"}),","," ",Object(r.jsx)("span",{className:"code",children:"flex-end"}),",",Object(r.jsx)("span",{className:"code",children:"space-around"}),","," ",Object(r.jsx)("span",{className:"code",children:"space-between"})]})," ",Object(r.jsx)("td",{children:"Comment le contenu doit-il \xeatre distrbu\xe9 le long de l\u2019axe principal\xa0? Au d\xe9but, au centre, \xe0 la fin, en r\xe9partissant l\u2019espace\xa0?"})]}),Object(r.jsxs)("tr",{children:[Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"alignItems"})})," ",Object(r.jsx)("td",{children:Object(r.jsx)("span",{className:"code",children:"stretch"})})," ",Object(r.jsxs)("td",{children:[Object(r.jsx)("span",{className:"code",children:"flex-start"}),","," ",Object(r.jsx)("span",{className:"code",children:"center"}),","," ",Object(r.jsx)("span",{className:"code",children:"flex-end"}),","," ",Object(r.jsx)("span",{className:"code",children:"stretch"})]})," ",Object(r.jsx)("td",{children:"Comment le contenun doit \xeatre align\xe9 le long de l\u2019axe secondaire\xa0? (Si l\u2019axe principal est \xab\xa0row\xa0\xbb, le secondaire est \xab\xa0column\xa0\xbb, et vice-versa) Le contenu doit-il \xeatre aligne au d\xe9but, au centre, \xe0 la fin ou \xe9tir\xe9 pour remplir son parent\xa0?"})]})]})]}),Object(r.jsx)("p",{children:"L\u2019exemple suivant vous permet d\u2019essayer les diff\xe9entes combinaisons."}),Object(r.jsx)(O,{files:{"App.js":"import React, { useState } from 'react'\nimport { View, StyleSheet } from 'react-native'\n\nimport Toggle from './Toggle'\n\nexport default function App() {\n  const [flexDirection, setFlexDirection] = useState('row')\n  const [justifyContent, setJustifyContent] = useState('center')\n  const [alignItems, setAlignItems] = useState('center')\n  const layoutStyle = { flexDirection, justifyContent, alignItems }\n\n  const primaryAxis = flexDirection === 'row' ? 'Horizontal' : 'Vertical'\n  const secondaryAxis = flexDirection === 'row' ? 'Vertical' : 'Horizontal'\n\n  return (\n    <View style={styles.container}>\n      <Toggle\n        label={'Axe principal (flexDirection)'}\n        value={flexDirection}\n        options={flexDirectionOptions}\n        onChange={(option) => {\n          setFlexDirection(option)\n        }}\n      />\n      <Toggle\n        label={`Distribution ${primaryAxis.toLowerCase()}e (justifyContent)`}\n        value={justifyContent}\n        options={justifyContentOptions}\n        onChange={(option) => {\n          setJustifyContent(option)\n        }}\n      />\n      <Toggle\n        label={`Alignement ${secondaryAxis.toLowerCase()} (alignItems)`}\n        value={alignItems}\n        options={alignItemsOptions}\n        onChange={(option) => {\n          setAlignItems(option)\n        }}\n      />\n      <View style={[styles.layout, layoutStyle]}>\n        <View style={styles.box} />\n        <View style={styles.box} />\n        <View style={styles.box} />\n      </View>\n    </View>\n  )\n}\n\nconst flexDirectionOptions = ['row', 'column']\nconst justifyContentOptions = [\n  'flex-start',\n  'center',\n  'flex-end',\n  'space-around',\n  'space-between',\n]\nconst alignItemsOptions = ['flex-start', 'center', 'flex-end', 'stretch']\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  layout: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.05)',\n  },\n  box: {\n    padding: 25,\n    backgroundColor: '#3B6CD4',\n    margin: 5,\n  },\n})\n","Toggle.js":"import React from 'react'\nimport { View, Text, Button, StyleSheet } from 'react-native'\n\nexport default function Toggle({ label, options, value, onChange }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>{label}</Text>\n      <View style={styles.optionsContainer}>\n        {options.map((option) => (\n          <Button\n            color={option === value ? '#3B6CD4' : '#AAA'}\n            onPress={() => onChange(option)}\n            title={option}\n            key={option}\n          />\n        ))}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    paddingBottom: 12,\n  },\n  label: {\n    fontSize: 14,\n    padding: 4,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n})\n"}}),Object(r.jsx)(j,{backTo:"/specific-components",backLabel:"Composants Sp\xe9cifiques",nextTo:"/specific-components/text",nextLabel:"<Text />"})]})}function y(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"<Text />"}),Object(r.jsxs)("p",{children:[Object(r.jsx)("span",{className:"code",children:"Text"})," est utilis\xe9 pour afficher du texte. Contrairement \xe0 ce qu\u2019on a l\u2019habitude de voir dans le navigateur, tout texte doit \xeatre \xab\xa0emball\xe9\xa0\xbb dans un composant"," ",Object(r.jsx)("span",{className:"code",children:"<Text />"}),"."]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Hello!</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    backgroundColor: 'whitesmoke',\n    color: '#4A90E2',\n    fontSize: 24,\n    padding: 10,\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/view",backLabel:"<View /> et StyleSheet",nextTo:"/specific-components/image",nextLabel:"<Image />"})]})}function g(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"<Image />"}),Object(r.jsxs)("p",{children:[Object(r.jsx)("span",{className:"code",children:"Image"})," est utilis\xe9 pour afficher des images. Les images peuvent \xeatre t\xe9l\xe9charg\xe9es dynamiquement ou import\xe9es comme des fichiers, qui seront embarqu\xe9s avec l\u2019application."]}),Object(r.jsxs)("p",{children:["Pour embarquer une image dans l\u2019application, importez le fichier en indiquant son chemin, avec l\u2019extension. Qu\u2019on soit sur Android ou iOS, le m\xeame fichier sera utils\xe9. En \xe9crivant"," ",Object(r.jsx)("span",{className:"code",children:"import './test.png' "}),", le fichier le plus appropri\xe9 pour la taille de l\u2019appareil sera choisi parmi\xa0:"," ",Object(r.jsx)("span",{className:"code",children:"test.png"}),","," ",Object(r.jsx)("span",{className:"code",children:"test@2x.png"}),", or"," ",Object(r.jsx)("span",{className:"code",children:"test@3x.png"}),"."]}),Object(r.jsx)("p",{children:"La mise en page pour les images t\xe9l\xe9charg\xe9es et les images embalqu\xe9es."}),Object(r.jsxs)("ul",{children:[Object(r.jsxs)("li",{children:[Object(r.jsx)("strong",{children:"Images embarqu\xe9es\xa0:"})," le fichier est analys\xe9 \xe0 la compilation et les dimensions sont incluses dans les m\xe9tadonn\xe9es de l\u2019application. Les dimensions du composant"," ",Object(r.jsx)("span",{className:"code",children:"Image"})," sont donc celle de l\u2019image par d\xe9faut\xa0;"]}),Object(r.jsxs)("li",{children:[Object(r.jsx)("strong",{children:"Images t\xe9l\xe9charg\xe9es\xa0:"})," les dimensions ne sont pas connues \xe0 la compilation, donc elles sont \xe0 0 par d\xe9faut. Pour que l\u2019image puisse s\u2019afficher \xe0 l\u2019\xe9cran, nous devons indiquer la hauteur et la largeur (en dur, ou via flexbox)."]})]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { Image, StyleSheet } from 'react-native'\n\nexport default function App() {\n  return (\n    <Image\n      style={styles.image}\n      source={{ uri: 'https://picsum.photos/200' }}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 200,\n    height: 200,\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/text",backLabel:"<Text />",nextTo:"/specific-components/text-input",nextLabel:"<TextInput />"})]})}function v(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"<TextInput />"}),Object(r.jsxs)("p",{children:["Une exemple de saisie utilisateur. ",Object(r.jsx)("br",{}),"Le composant ",Object(r.jsx)("span",{className:"code",children:"<TextInput />"})," est tr\xe8s riche et offre de nombreuses possibilit\xe9s pour formater, valider la saisie, choisir le type de clavier virtuel \xe0 afficher, etc.",Object(r.jsx)("br",{}),"La liste compl\xe8te des props est disponible sur"," ",Object(r.jsx)("a",{href:"https://reactnative.dev/docs/textinput",children:"la documentation offcielle de React Native"})]}),Object(r.jsxs)("p",{children:["Son fonctionnement n\u2019est pas tr\xe8s diff\xe9tent d\u2019un"," ",Object(r.jsx)("span",{className:"code",children:"<input />"})," du navigateur. On utilise un \xe9tat, ",Object(r.jsx)("span",{className:"code",children:"text"}),", pour conserver la valeur courante du champ. On passe text au"," ",Object(r.jsx)("span",{className:"code",children:"TextInput"})," dans la prop value, et \xe0 chaque fois que ",Object(r.jsx)("span",{className:"code",children:"onChangeText()"}),"sera appel\xe9e, on mettra l\u2019\xe9tat \xe0 jour en appelant"," ",Object(r.jsx)("span",{className:"code",children:"setText()"}),"."]}),Object(r.jsxs)("blockquote",{children:["Nous utilisons le hook ",Object(r.jsx)("span",{className:"code",children:"useState"})," pour stocker la valeur. On le traite dans un autre chapitre."]}),Object(r.jsx)(O,{code:"import React, { useState } from 'react'\nimport { View, Text, TextInput } from 'react-native'\n\nexport default function App() {\n  const [text, setText] = useState('')\n\n  return (\n    <View>\n      <TextInput\n        value={text}\n        style={{ fontSize: 42, color: 'steelblue' }}\n        placeholder=\"Votre texte ici\u2026\"\n        onChangeText={(text) => {\n          setText(text)\n        }}\n      />\n      <Text style={{ fontSize: 24 }}>\n        Vous avez \xe9crit : {text}\n      </Text>\n    </View>\n  )\n}\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/image",backLabel:"<Image />",nextTo:"/specific-components/button",nextLabel:"<Button />"})]})}function S(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"<Button />"}),Object(r.jsxs)("p",{children:["Le composant ",Object(r.jsx)("span",{className:"code",children:"<Button />"})," permet d\u2019affiche un bouton en utilisant les styles natifs de chaque plateforme."]}),Object(r.jsx)("p",{children:"Se ce composant est pratique, il n\u2019est pas tr\xe8s configurable. Si vous voulez changer le style au-del\xe0 de la couleur de fond, vous utilierez plut\xf4t des composants Touchable."}),Object(r.jsx)(O,{code:"import React, { useState } from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\n\nexport default function App() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <View style={styles.container}>\n      <Button\n        title={'Pressez moi!'}\n        onPress={() => {\n          setCount(count + 1)\n        }}\n      />\n      <Text style={styles.text}>{`Press\xe9 ${count} fois`}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: 18,\n    padding: 12,\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/text-input",backLabel:"<TextInput />",nextTo:"/specific-components/touchables",nextLabel:"Touchables"})]})}function w(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"Touchables"}),Object(r.jsx)("h2",{children:"Touchable Opacity"}),Object(r.jsxs)("p",{children:["Quand l\u2019utilisateur touche ce composant, son opacit\xe9 est r\xe9duite, jusqu\u2019\xe0 ce qu\u2019il soit relach\xe9.",Object(r.jsx)("br",{}),"Il peut \xeatre stylis\xe9, dispos\xe9 via"," ",Object(r.jsx)("span",{className:"code",children:"StyleSheet"}),", comme une"," ",Object(r.jsx)("span",{className:"code",children:"View"}),"."]}),Object(r.jsxs)("p",{children:["L\u2019opacit\xe9 peut-\xeatre configur\xe9e via la prop"," ",Object(r.jsx)("span",{className:"code",children:"activeOpacity"})]}),Object(r.jsx)("blockquote",{children:"C\u2019est le type de bouton le plus commun dans une application React Native."}),Object(r.jsx)(O,{code:"import React, { useState } from 'react'\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\n\nexport default function App() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity\n        style={styles.button}\n        activeOpacity={0.7}\n        onPress={() => {\n          setCount(count + 1)\n        }}\n      >\n        <Text style={styles.text}>Appuyez-moi dessus !</Text>\n      </TouchableOpacity>\n      <Text style={styles.text}>{`Appuy\xe9 ${count} fois`}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    padding: 40,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: 'green',\n    backgroundColor: 'lightgreen',\n  },\n  text: {\n    fontSize: 18,\n    padding: 12,\n  },\n})\n      "}),Object(r.jsx)("h2",{className:"mt-6",children:"Touchable Highlight"}),Object(r.jsx)("p",{children:"La couleur de ce composant change quand on appuie dessus."}),Object(r.jsxs)("p",{children:["Cette couleur peut \xeatre configur\xe9e avec la prop"," ",Object(r.jsx)("span",{className:"code",children:"underlayColor"})]}),Object(r.jsx)(O,{code:"import React, { useState } from 'react'\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native'\n\nexport default function App() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <View style={styles.container}>\n      <TouchableHighlight\n        style={styles.button}\n        underlayColor=\"#FAB\"\n        onPress={() => {\n          setCount(count + 1)\n        }}\n      >\n        <Text style={styles.text}>Appuyez-moi !</Text>\n      </TouchableHighlight>\n      <Text style={styles.text}>{`Appuy\xe9 ${count} fois`}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    padding: 40,\n    borderRadius: 4,\n    backgroundColor: '#F88',\n  },\n  text: {\n    fontSize: 18,\n    padding: 12,\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/button",backLabel:"<Button />",nextTo:"/specific-components/lists",nextLabel:"Lists"})]})}function T(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"Listes"}),Object(r.jsx)("h2",{children:"Scroll View"}),Object(r.jsxs)("p",{children:["Les ",Object(r.jsx)("span",{className:"code",children:"ScrollView"})," permettent permettent d\u2019avoir une surface scrollable, autant verticalement que horizontalement. ",Object(r.jsx)("br",{}),"Elles offrent beaucoup de possibilit\xe9s de customization,"," ",Object(r.jsx)("a",{href:"https://reactnative.dev/docs/scrollview",children:"(voir la documentation offcielle)"})," ","mais pour de meilleurs performances, on pr\xe9f\xe8rera els"," ",Object(r.jsx)("span",{className:"code",children:"FlatList"})," et"," ",Object(r.jsx)("span",{className:"code",children:"SectionList"}),"."]}),Object(r.jsx)("h2",{children:"Flat List"}),Object(r.jsxs)("p",{children:["Les ",Object(r.jsx)("span",{className:"code",children:"FlatList"})," sont utilis\xe9es pour les grand quantit\xe9 de contenu scrollable (c.f. Twitter ou Tumblr). Elles ont les m\xeames props que",Object(r.jsx)("span",{className:"code",children:"ScrollView"})," dont elles h\xe9ritent, mais avec des performances accrues\xa0: seul le contenu visible \xe0 l\u2019\xe9cran est rendu, et seules les rang\xe9es n\xe9cessitant une mise \xe0 jour sont re-rendues.",Object(r.jsx)("br",{}),"Ells peuvent \xeatre scroll\xe9es horizontalement ou verticalement."]}),Object(r.jsxs)("p",{children:["Elles ne rendent pas leur enfants, mais utilsent la prop"," ",Object(r.jsx)("span",{className:"code",children:"renderItem"}),". Celle-ci est une fonction qui prend comme param\xe8tre un \xe9l\xe9ment du tableau"," ",Object(r.jsx)("span",{className:"code",children:"data"}),", et retourne un Element React.",Object(r.jsx)("br",{}),"Chaque \xe9l\xe9ment du tableau ",Object(r.jsx)("span",{className:"code",children:"data"})," doit avoir un identifiant unique pour que React puisse d\xe9terminer les r\xe9arrangements. Par d\xe9faut, React utilise"," ",Object(r.jsx)("span",{className:"code",children:"item.key"}),", mais \xe7a peut \xeatre configur\xe9 avec la prop ",Object(r.jsx)("span",{className:"code",children:"keyExtractor"}),"."]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { FlatList, StyleSheet, Text } from 'react-native'\n\nconst items = [\n  { id: '0', text: 'View' },\n  { id: '1', text: 'Text' },\n  { id: '2', text: 'Image' },\n  { id: '3', text: 'ScrollView' },\n  { id: '4', text: 'ListView' },\n]\n\nexport default function App() {\n  return (\n    <FlatList\n      style={styles.container}\n      data={items}\n      renderItem={({ item }) => <Text style={styles.row}>{item.text}</Text>}\n      keyExtractor={(item) => item.id}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'skyblue',\n  },\n})\n      "}),Object(r.jsx)("h2",{className:"mt-6",children:"Section List"}),Object(r.jsxs)("p",{children:["Les ",Object(r.jsx)("span",{className:"code",children:"SectionList"})," sont comme les"," ",Object(r.jsx)("span",{className:"code",children:"FlatList"}),", mais peuvent avoir des ent\xeates de section et des groupes de rang\xe9s distincts."]}),Object(r.jsxs)("p",{children:[Object(r.jsx)("span",{className:"code",children:"SectionList"})," rend chaque \xe9l\xe9ment du tableau pass\xe9 en prop ",Object(r.jsx)("span",{className:"code",children:"sections"})," en utilisant les props ",Object(r.jsx)("span",{className:"code",children:"renderSectionHeader"})," et"," ",Object(r.jsx)("span",{className:"code",children:"renderItem"}),". Chaque \xe9l\xe9ment de"," ",Object(r.jsx)("span",{className:"code",children:"sections"})," doit \xeatre un objet avec un identifiant unique, un tableau ",Object(r.jsx)("span",{className:"code",children:"data"})," ","contenant les donn\xe9es. Chaque \xe9l\xe9ment de"," ",Object(r.jsx)("span",{className:"code",children:"data"})," doit \xe9galement avoir son identifiant unique.",Object(r.jsx)("br",{}),"Si la prop ",Object(r.jsx)("span",{className:"code",children:"renderItem"})," fonctionne comme pour ",Object(r.jsx)("span",{className:"code",children:"FlatList"}),","," ",Object(r.jsx)("span",{className:"code",children:"renderSectionHeader"})," prend un \xe9l\xe9ment de"," ",Object(r.jsx)("span",{className:"code",children:"sections"})," comme param\xe8tre."]}),Object(r.jsx)("h3",{children:"Exemple avec la m\xeame renderItem pour toutes les sections"}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { SectionList, StyleSheet, Text } from 'react-native'\n\nconst sections = [\n  {\n    id: '0',\n    title: 'Basic Components',\n    data: [\n      { id: '0', text: 'View' },\n      { id: '1', text: 'Text' },\n      { id: '2', text: 'Image' },\n    ],\n  },\n  {\n    id: '1',\n    title: 'List Components',\n    data: [\n      { id: '3', text: 'ScrollView' },\n      { id: '4', text: 'ListView' },\n    ],\n  },\n]\n\nexport default function App() {\n  return (\n    <SectionList\n      style={styles.container}\n      sections={sections}\n      renderItem={({ item }) => <Text style={styles.row}>{item.text}</Text>}\n      renderSectionHeader={({ section }) => (\n        <Text style={styles.header}>{section.title}</Text>\n      )}\n      keyExtractor={(item) => item.id}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'skyblue',\n  },\n  header: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'steelblue',\n    color: 'white',\n    fontWeight: 'bold',\n  },\n})\n      "}),Object(r.jsx)("h3",{children:"Exemple avec une renderItem par section"}),Object(r.jsxs)("p",{children:["Une fonction ",Object(r.jsx)("span",{className:"code",children:"renderItem"})," peut \xeatre sp\xe9cifi\xe9e dans le tableau ",Object(r.jsx)("span",{className:"code",children:"sections"}),", une par section, au lieu d\u2019une prop de"," ",Object(r.jsx)("span",{className:"code",children:"SectionList"}),". Chaque section peut \xeatre rendue diff\xe9ramment. Une alternative serait d\u2019utiliser les donn\xe9es des \xe9l\xe9ments des ",Object(r.jsx)("span",{className:"code",children:"data"})," pour rendre chaque \xe9l\xe9ment diff\xe9ramment."]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { SectionList, StyleSheet, Text } from 'react-native'\n\nconst sections = [\n  {\n    id: '0',\n    title: 'Basic Components',\n    data: [\n      { id: '0', text: 'View' },\n      { id: '1', text: 'Text' },\n      { id: '2', text: 'Image' },\n    ],\n    renderItem: ({ item }) => {\n      return <Text style={styles.row}>{item.text}</Text>\n    },\n  },\n  {\n    id: '1',\n    title: 'List Components',\n    data: [\n      { id: '3', text: 'ScrollView' },\n      { id: '4', text: 'ListView' },\n    ],\n    renderItem: ({ item }) => <Text style={styles.rowDark}>{item.text}</Text>,\n  },\n]\n\nexport default function App() {\n  return (\n    <SectionList\n      style={styles.container}\n      sections={sections}\n      renderSectionHeader={({ section }) => {\n        return <Text style={styles.header}>{section.title}</Text>\n      }}\n      keyExtractor={(item) => item.id}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'skyblue',\n  },\n  rowDark: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'steelblue',\n  },\n  header: {\n    padding: 15,\n    marginBottom: 5,\n    backgroundColor: 'darkblue',\n    color: 'white',\n    fontWeight: 'bold',\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/touchables",backLabel:"Touchables",nextTo:"/react-hooks",nextLabel:"React\u2026 avec les hooks !"})]})}function N(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"React\u2026 avec les hooks\xa0!"}),Object(r.jsx)("p",{children:"Cette section est plus un rappel, pour ceux qui se seraient d\xe9j\xe0 frott\xe9\xb7e\xb7s aux fameux hooks de React, ou une succincte introduction pour les autres."}),Object(r.jsx)(j,{backTo:"/specific-components/lists",backLabel:"Listes",nextTo:"/react-hooks/usestate",nextLabel:"useState()"})]})}function C(){return Object(r.jsxs)("div",{className:"w-full",children:[Object(r.jsx)("h1",{children:"useState()"}),Object(r.jsxs)("p",{children:[Object(r.jsx)("span",{className:"code",children:"Text"})," est utilis\xe9 pour afficher du texte. Contrairement \xe0 ce qu\u2019on a l\u2019habitude de voir dans le navigateur, tout texte doit \xeatre \xab\xa0emball\xe9\xa0\xbb dans un composant"," ",Object(r.jsx)("span",{className:"code",children:"<Text />"}),"."]}),Object(r.jsx)(O,{code:"import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Hello!</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    backgroundColor: 'whitesmoke',\n    color: '#4A90E2',\n    fontSize: 24,\n    padding: 10,\n  },\n})\n      "}),Object(r.jsx)(j,{backTo:"/specific-components/view",backLabel:"<View /> et StyleSheet",nextTo:"/specific-components/image",nextLabel:"<Image />"})]})}var k=n(18),L=n.n(k),V=n(19),q=n.n(V),I=n(20),A=n.n(I),R=n(21),B=n.n(R),D=n(22),z=n.n(D);var P=function(){return Object(r.jsx)("div",{className:"flex App",children:Object(r.jsxs)(o.a,{children:[Object(r.jsx)(p,{}),Object(r.jsx)("div",{className:"w-5/6 p-16 px-48",children:Object(r.jsxs)(l.c,{children:[Object(r.jsx)(l.a,{path:"/",exact:!0,children:Object(r.jsx)(u,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components",children:Object(r.jsx)(x,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/view",children:Object(r.jsx)(f,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/text",children:Object(r.jsx)(y,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/image",children:Object(r.jsx)(g,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/text-input",children:Object(r.jsx)(v,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/button",children:Object(r.jsx)(S,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/touchables",children:Object(r.jsx)(w,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/specific-components/lists",children:Object(r.jsx)(T,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks",children:Object(r.jsx)(N,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/usestate",children:Object(r.jsx)(C,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/useeffect",children:Object(r.jsx)(L.a,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/usecallback",children:Object(r.jsx)(q.a,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/useref",children:Object(r.jsx)(A.a,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/usememo",children:Object(r.jsx)(B.a,{})}),Object(r.jsx)(l.a,{exact:!0,path:"/react-hooks/usereducer",children:Object(r.jsx)(z.a,{})})]})})]})})},E=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,36)).then((function(t){var n=t.getCLS,s=t.getFID,c=t.getFCP,a=t.getLCP,i=t.getTTFB;n(e),s(e),c(e),a(e),i(e)}))};i.a.render(Object(r.jsx)(c.a.StrictMode,{children:Object(r.jsx)(P,{})}),document.getElementById("root")),E()}},[[35,1,2]]]);
//# sourceMappingURL=main.5a6bb1da.chunk.js.map